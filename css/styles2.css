:root {/*CSS variables for element background, border, default boxShadow colors */
  --Page-backgroundColor: #cddeee;
  --Header-backgroundColor: #38598b;
  --Footer-backgroundColor: rgb(51, 66, 87);
  --ChartContent-barChart--odd-backgroundColor: #9f4b7a;
  --ChartContent-barChart--even-backgroundColor: #aeddcd;
  --Modal-backgroundColor: #28282b;
  --ChartContent-borderColor: black;
  --Page-boxShadowColor: black;
  --ChartContent-barChart-boxShadowColor: grey;
  /* for text colors */
  --Page-textColor: white;
  --Header-textColor: beige;
  --Modal-textColor: white;
  --section-config-height: 9em;
}

/* set margins and padding to default 0 and set box-sizing to border-box */

html {
  box-sizing: border-box;
}

*, *:before, *:after, li {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/* style entire body, aka .Page */

/* .ChartContent-barChartContainer.is-forBaseChart::before {
  content: '';
  background: rgba(175,100,55,1);
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  position: absolute;
  z-index: 0;
}
 */

.ChartContent-barChartContainer.is-forBaseChart {
  background: rgba(175,100,55,.5);
}

.ChartContent-indicateBase {
  position: absolute;
  color: black;
  color: transparent;
  top: 5em;
  left: 60%;
  writing-mode: vertical-rl;
  text-orientation: upright;
  display: inline-block;
  margin: 0 auto;
  text-shadow: 3px 5px 3px black;
  opacity: .5;
}

.Configure-baseFilter {
  max-width: 4em;
}

.Configure-reset {
  background: beige;
  display: grid;
  margin-bottom: 1em;
}

/* .Configure-baseOption {
  display: inline-block;
  background: lightslategray;
  min-height: 30px;
  margin-top: 2px;
  margin-bottom: 2px;
  border: 1px solid blue;
  border-radius: 3px;
}
 */

.Configure-comparisonsSelectBox, .Configure-baseSelectBox {
  height: 5em;
  border: 2px solid black;
  border-radius: 5px;
  overflow-y: scroll;
  scroll-behavior: smooth;
  max-width: 22em;
  list-style-type: none;
  background: lightyellow;
}

.Configure-comparisonsSelectBox:hover {
  cursor: default;
}

.Configure-comparisonOption, .Configure-baseOption {
  padding: 3px 0 3px 0;
  border: 1px solid transparent;
  list-style-type: none;
  border-top: 1px solid black;
  height: 1.7em;
  box-sizing: border-box;
  margin-bottom: 3px;
}

.Configure-comparisonOption:not(.Configure-selectedComparison):hover,
.Configure-baseOption:hover {
  background: radial-gradient(hsl(240,85%,80%) 10%, hsl(225,75%,46%) 90%);
  background: lightblue;
  box-shadow: 9px 7px 15px grey;
  font-style: italic;
  color: black;
  display: block;
}

.Configure-selectedComparison {
  background: lightblue;
  background: radial-gradient(hsl(240,85%,80%) 10%, hsl(225,75%,46%) 90%);
  border-top: 1px solid black;
  color: white;
  font-weight: bold;
}

.Configure-showComparisons {
}

.Configure-listComparisons {
  display: grid;
  grid-template-columns: 1fr 1fr;
}

.Configure-showConfiguration p:hover, .Configure-headerBaseValue {
  cursor: help;
}

.Configure-comparisonParagraph, .Configure-baseParagraph,
.Configure-headerBaseValue {
  background: white;
  align-self: baseline;
  margin: 2px;
  text-align: center;
  border: 1px solid black;
  border-radius: 3px;
  position: relative;
  display: inline-block;
}

.Configure-headerBaseValue {
  position: relative;
  display: inline-block;
}

.Configure-baseParagraph {
  padding: .1em .3em .1em .3em;
}

.Configure-comparisonParagraph[aria-label]:hover::after,
.Configure-baseParagraph[aria-label]:hover::after,
.Configure-headerBaseValue:hover::after {
  content: attr(aria-label);
  position: absolute;
  top: 9%;
  left: 7%;
  width: content;
  background: slateblue;
  color: white;
  font-style: bold;
  white-space: nowrap;
  font-size: .8em;
  text-align: left;
  z-index: 10;
  border-radius: 2px;
  padding: .2em 1em;
  box-shadow: -3px -4px 7px grey;
}

.Configure {
  font-size: 1em;
  min-height: var(--section-config-height);
  background-image: linear-gradient(to left, #ebf1f6 0%,#abd3ee 20%,#2ec3eb 71%,#d5ebfb 100%);
  color: black;
  display: grid;
  grid-template-columns: repeat(auto-fill,minmax(20em,1fr));
  justify-content: space-around;
  grid-column-gap: .5em;
}

.Configure-showConfiguration, .Configure-reset {
  background: beige;
  /* align-self: center;
 */
  border-radius: 5px;
  min-width: 10em;
  max-width: 22em;
  margin-top: 1.2em;
  align-self: baseline;
}

.Configure-reset {
  width: fit-content;
  text-align: center;
}

@keyframes flashConfiguration {
  0% {
    background-color: beige ;
  }

  50% {
    background-color: orange;
    box-shadow: 1em 1em .3em rgba(200,200,0,.5) ,-1em -1em .3em rgba(255,255,0,.5);
  }

  100% {
    background-color: beige;
  }
}

.Configure-headerBaseValueAnim, .Configure-configurationCurrencyAnim p {
  animation: flashConfiguration 500ms normal forwards;
  animation-iteration-count: 3;
}

.Configure-showConfiguration {
  display: flex;
  justify-content: space-between;
  padding: 0 15% .5em 0;
  align-self: baseline;
  height: 6.5em;
}

.Configure * {
  font-size: 1em;
}

.Page {
  background: var(--Page-backgroundColor);
  height: 100vh;
  font-family: 'Nunito', sans-serif;
  font-weight: 400;
  color: var(--Page-textColor);
}

.Page-container {
  width: 80%;
  height: 100%;
  margin: 0 auto;
}

/* .Header as flex-box to be future-proof for next iterations */

.Header {
  height: 4em;
  background: var(--Header-backgroundColor);
  display: flex;
  align-items: stretch;
  flex: 1;
  padding: .3em;
}

.Header-title {
  font-weight: 400;
  font-size: 16px;
  color: var(--Header-textColor);
  text-transform: uppercase;
  justify-self: flex-start;
  padding-left: .5em;
  display: flex;
  align-items: center;
}

.Header-flashMessage {
  background: orange;
  width: 50%;
  align-items: center;
  margin-left: 4%;
  justify-content: center;
  border-radius: 7px;
  display: flex;
}

/* .ChartContent::before {
  content: '';
  background: #ebf5f9;
  background-image: linear-gradient(to bottom, #ebf1f6 0%,#abd3ee 50%,#2ec3eb 51%,#d5ebfb 100%);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: -1;
  display: block;
}
 */

.ChartContent {
  background: #ebf5f9;
  /* intended background for .CharContent */
  background-image: linear-gradient(to bottom, #ebf1f6 0%,#abd3ee 50%,#2ec3eb 51%,#d5ebfb 100%);
  display: flex;
  position: relative;
  justify-content: space-around;
  align-content: flex-end;
  /* height of header + footer = 9em */
  height: calc(100vh - 6em - var(--section-config-height));
  border: .5em solid var(--ChartContent-borderColor);
}

.ChartContent-barChartContainer {
  height: 100%;
  position: relative;
  display: flex;
}

.ChartContent-barChart {
  font-weight: 800;
  width: 7em;
  align-self: flex-end;
  border-radius: .5em .5em 0 0;
  border-color: var(--ChartContent-borderColor);
  border-style: solid;
  border-width: 9px 2px 0px 2px;
  box-shadow: 5px 1px 5px var(--ChartContent-barChart-boxShadowColor);
  /* barChart also a flex container, for controlling the positioning of its text */
  display: flex;
  padding-top: 5%;
  align-items: flex-start;
  justify-content: center;
  /* 
: 20;
 */
}

/* alternate background on barCharts from light background dark text to dark background light text */

.ChartContent-barChartContainer:nth-of-type(even) .ChartContent-barChart {
  background: var(--ChartContent-barChart--even-backgroundColor);
  color: black;
}

.ChartContent-barChartContainer:nth-of-type(odd) .ChartContent-barChart {
  background: var(--ChartContent-barChart--odd-backgroundColor);
}

/* custom modal instead of alert box, one modal absolute positioned per each ChartContent-container */

.Modal {
  color: var(--Modal-textColor);
  display: none;
  background-color: var(--Modal-backgroundColor);
  /* background: var(--Modal-backgroundColor);background-image: var(--Modal-backgroundColor);
 */
  border-radius: .6em;
  position: absolute;
  left: -55%;
  top: 15em;
  width: 230px;
  height: 110px;
  margin: 0;
  box-shadow: 2px 3px 1px var(--Page-boxShadowColor);
  z-index: 30;
}

/* state of modal = display */

.Modal.is-displayed {/* make modal visible, and use flex to keep text centered consistently across screenwidth changes*/
  display: flex;
  position: absolute;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.Footer {
  height: 2em;
  padding-left: .5em;
  background: var(--Footer-backgroundColor);
  display: flex;
}

.Footer-copywrite {
  align-self: center;
}

.mediaSmallSize {
  height: 70%;
}

.mediaFullSize {
  width: 7em;
}

@media only screen and (max-width: 950px) {/*change orientetion of .ChartContent flex items on smaller screens, i.e. vertical to horizontal barCharts */

  .ChartContent-indicateBase {
    position: absolute;
    color: black;
    color: transparent;
    top: 30%;
    left: 60%;
    writing-mode: horizontal-tb;
    text-orientation: mixed;
    text-shadow: 3px 5px 3px black;
  }

  .ChartContent {
    flex-direction: column;
    justify-content: space-around;
  }

  .ChartContent-barChartContainer {
    width: 100%;
    height: inherit;
  }

  .ChartContent-barChart {/* since ChartContent-barCharts have INLINE hardcoded styling of height in html for default vertical charts, use !important to change height for this class in css stylesheet */
    height: 70%;
    justify-self: flex-end;
    align-self: center;
    border-radius: 0 .3em .3em 0;
    border-width: 2px 7px 2px 0px;
    font-size: 95%;
    justify-content: flex-start;
    align-items: center;
    padding-left: .5em;
    padding-top: 0;
  }/*modal is absolutely positioned to ChartContent-container, whose height and width have been changed on small screens*/

  .Modal {
    top: 0;
    left: 10%;
    height: 100%;
    width: 12em;
    align-items: center;
    opacity: 1;
  }/*
   set width of barCharts to height (the originally hardcoded inline value), i.e. for switch from vertical to horizontal charts */
}

/* make acceptably responsive for extremely small-width screen devices */

@media only screen and (max-width:  320px) {
  .ChartContent-barChart {
    height: 100% !important;
    align-items: center;
    font-size: .9em;
    padding-top: 9%;
    padding-bottom: 5%;
  }

  .Footer, .Header-title {
    font-size: 70%;
  }

  .Configure-showConfiguration {
    display: hidden;
  }
}

@media only screen and (max-width:  240px) {
  .ChartContent-barChart {
    font-size: .5em;
    padding-top: 5%;
  }
}

@media only screen and (max-width: 950px) {
  .Configure-showConfiguration {
    display: none;
  }
}

/* animations */

@keyframes flashText {
  0% {
    text-shadow: 3px 5px 3px black;
    /* text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0.2em blue; */
    color: transparent;
    background: transparent;
  }

  50% {/* //color: black;
 */
    color: grey;
    text-shadow: 3px 5px 10px orange, 5px 10px 3px black;
  }

  100% {
    text-shadow: 3px 5px 3px black;
    /* text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0.2em blue; */
    color: transparent;
    background: transparent;
  }
}

@keyframes flashBackground {
  0% {
    background-color: blue ;
  }

  100% {
    background-color: green;
  }
}

.ChartContent-barChartContainer.is-forBaseChart:hover .ChartContent-indicateBase {
  animation: flashText 400ms normal forwards;
  animation-iteration-count: 2;
}

.ChartContent-barChartContainer.is-forBaseChart:hover .ChartContent-indicateBase::before {
  animation: flashBackground 400ms normal forwards;
  animation-iteration-count: 2;
}

@keyframes clearCharts {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

.ChartContent--clearCharts .ChartContent-barChartContainer {
  animation: clearCharts 2s normal forwards;
  animation-iteration-count: 1;
}

/* rotate modal while shrinking it and throwing a small shadow */

@keyframes disappearModal {
  0% {
    box-shadow: 5px 5px 5px grey;
  }

  100% {
    transform: rotate(380deg);
    height: 7%;
    width: 4%;
    font-size: 3px;
    box-shadow: 15px 15px 15px black;
  }
}

/* when modal activated on barchart click, activate 'disappearing modal' animation when user mouseoff barchart */

.ChartContent-barChart:not(:hover) .Modal {
  animation: disappearModal 800ms normal forwards;
  animation-iteration-count: 1;
}
